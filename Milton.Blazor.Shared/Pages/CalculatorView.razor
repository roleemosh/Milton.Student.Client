@page "/calculator"

@using Microsoft.AspNetCore.Components.Web
@using Milton.Blazor.Shared.Helpers;
@using Milton.Blazor.Shared.Interfaces;
@using Milton.Blazor.Shared.Models;
@using Milton.Blazor.Shared.ViewModels;

@inject IPageTitleService PageTitleService
@inject ISnackbar Snakbar
@inject ISubjectRepo SubjectRepo
@inject NavigationManager NavigationManager

<PageTitle>CalculatorView</PageTitle>

<div class="container relative">
    <div class="w-full h-full bg-white rounded-lg shadow p-4 max-w-[70%] m-auto">
        <div class="flex py-[3rem]">
            <div class="w-2/5"></div>
            <img src="_content/Milton.Blazor.Shared/pictures/calculator.svg" alt="Milton's calculator" class="absolute" style="
    top: -70px;
    left: 185px;
" />
            <div class="w-3/5">
                <p class="leading-loose">Szakképesítés szakmai vizsga eredménye alapján történő pontszámításra jelenleg a kalkulátor még szintén nem használható! A szakképesítésről a Tájékoztató alábbi fejezetében található részletes információ: Érettségi pont számítása meghatározott szakképzettség alapján.</p>
            </div>
        </div>
        <div class="flex flex-col">
            @*High school*@
            <div class="flex">
                <div class="w-1/3 p-4">
                    <h3 class="text-2xl text-gray-700">Középiskolai eredmények</h3>
                    <p class="text-base">Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
                </div>
                <div class="w-2/3 bg-orange-300 rounded-lg  p-4">
                    <table>
                        <tr>
                            <th style="    width: 80%;
    text-align: left;">Tantárgy</th>
                            <th style="    width: 20%;
    text-align: left;">Utolsó előtti</th>
                            <th style="    width: 20%;
    text-align: left;">Utolsó tanult</th>
                        </tr>
                        @foreach (Subject subject in ViewModel.CurrentSubjects)
                        {
                            <tr class="spaceUnder">
                                <td>@subject.Name</td>
                                <td>  <GradeField @bind-value=@subject.BeforeCurrentGrade></GradeField></td>
                                <td>  <GradeField @bind-value=@subject.CurrentGrade></GradeField></td>
                            </tr>
                        }
                        @*Language and choosed subjects*@
                        <tr class="spaceUnder">
                            <td><ComboBox Mandatory=false ItemsSource="@ViewModel.GetAllSubjects" TValue=string @bind-Value="@ViewModel.SelectedLanguageOrChoosed.Name"></ComboBox></td>
                            <td><GradeField IsReadOnly="@(string.IsNullOrEmpty(ViewModel.SelectedLanguageOrChoosed.Name))" @bind-value=@ViewModel.SelectedLanguageOrChoosed.BeforeCurrentGrade></GradeField></td>
                            <td><GradeField IsReadOnly="@(string.IsNullOrEmpty(ViewModel.SelectedLanguageOrChoosed.Name))" @bind-value=@ViewModel.SelectedLanguageOrChoosed.CurrentGrade></GradeField></td>
                        </tr>
                        @*Natural subjects*@
                        <tr class="spaceUnder">
                            <td><ComboBox Mandatory=false ItemsSource="@ViewModel.GetNaturalSciences()" TValue=string @bind-Value="@ViewModel.SelectedNaturalScience.Name"></ComboBox></td>
                            <td><GradeField IsReadOnly="@(string.IsNullOrEmpty(ViewModel.SelectedNaturalScience.Name))" @bind-value=@ViewModel.SelectedNaturalScience.BeforeCurrentGrade></GradeField></td>
                            <td><GradeField IsReadOnly="@(string.IsNullOrEmpty(ViewModel.SelectedNaturalScience.Name))" @bind-value=@ViewModel.SelectedNaturalScience.CurrentGrade></GradeField></td>
                        </tr>
                        @*Secondary natural subjects*@
                        @*@if (string.IsNullOrEmpty(ViewModel.SelectedNaturalScience.Name) == false)
                        {
                            <tr class="spaceUnder">
                                <td><ComboBox Mandatory=false ItemsSource="@ViewModel.GetSecondaryNaturalSciences()" TValue=string @bind-Value="@ViewModel.SelectedSecondaryNaturalScience.Name"></ComboBox></td>
                                <td><GradeField IsReadOnly="@(string.IsNullOrEmpty(ViewModel.SelectedSecondaryNaturalScience.Name))" @bind-value=@ViewModel.SelectedSecondaryNaturalScience.BeforeCurrentGrade></GradeField></td>
                                <td><GradeField IsReadOnly="@(string.IsNullOrEmpty(ViewModel.SelectedSecondaryNaturalScience.Name))" @bind-value=@ViewModel.SelectedSecondaryNaturalScience.CurrentGrade></GradeField></td>
                            </tr>
                        }*@
                    </table>
                </div>
            </div>
            @*Graduation*@
            <div class="flex">
                <div class="w-1/3 p-4">
                    <h3 class="text-2xl text-gray-700">Érettségi eredmények</h3>
                    <p class="text-base">Lorem ipsum dolor sit amet, consectetur adipiscing elit. </p>
                </div>

                <div class="w-2/3 bg-blue-200 mt-4 rounded-lg  p-4">
                    <table>
                        <tr>
                            <th style="    width: 80%;
    text-align: left;">Tantárgy</th>
                            <th style="    width: 20%;
    text-align: left;">Emelt szintű</th>
                            <th style="    width: 20%;
    text-align: left;">Eredmény(%)</th>
                        </tr>
                        @foreach (Graduation graduation in ViewModel.CurrentGraduations)
                        {
                            <tr class="spaceUnder">
                                <td>@graduation.Name</td>
                                <td> <InputCheckbox class="w-[2rem] h-[2rem]" @bind-Value=@graduation.IsHigh></InputCheckbox></td>
                                <td> <NumberField @bind-value=@graduation.Percentage></NumberField></td>
                            </tr>
                        }

                        <tr class="spaceUnder">
                            <td><ComboBox Mandatory=false ItemsSource="@SubjectRepo.GraduationLanguages" TValue=string @bind-Value="@ViewModel.GraduationLanguage.Name"></ComboBox></td>
                            <td><InputCheckbox class="w-[2rem] h-[2rem]" @bind-Value=@ViewModel.GraduationLanguage.IsHigh></InputCheckbox></td>
                            <td><NumberField @bind-value=@ViewModel.GraduationLanguage.Percentage></NumberField></td>
                        </tr>

                        <tr class="spaceUnder">
                            <td><ComboBox Mandatory=false ItemsSource="@SubjectRepo.GraduationSubjects" TValue=string @bind-Value="@ViewModel.GraduationChoosed.Name"></ComboBox></td>
                            <td><InputCheckbox class="w-[2rem] h-[2rem]" @bind-Value=@ViewModel.GraduationChoosed.IsHigh></InputCheckbox></td>
                            <td><NumberField @bind-value=@ViewModel.GraduationChoosed.Percentage></NumberField></td>
                        </tr>

                    </table>
                </div>

            </div>

            <button @onclick=@ViewModel.TestNavigation type="button" class="mt-4 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-lg px-5 py-2.5 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                Számítás
                <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
            </button>

        </div>

    </div>
</div>


@code {

    private CalculatorViewModel ViewModel;

    protected override Task OnInitializedAsync()
    {
        return ViewModel.InitAsync();
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();
        ViewModel = new(PageTitleService, Snakbar, SubjectRepo, NavigationManager);
    }

    private void OnExpandPanelChanged(bool isOpened)
    {

    }
}
